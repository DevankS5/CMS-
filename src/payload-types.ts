/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    posts: Post;
    categories: Category;
    tags: Tag;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    tags: TagsSelect<false> | TagsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  /**
   * Full name of the user
   */
  name: string;
  /**
   * User role and permissions
   */
  role: 'admin' | 'author' | 'editor';
  /**
   * Brief biography for author pages
   */
  bio?: string | null;
  /**
   * Profile picture
   */
  avatar?: (string | null) | Media;
  /**
   * Social media links
   */
  social?: {
    /**
     * Personal website URL
     */
    website?: string | null;
    /**
     * Twitter/X handle
     */
    twitter?: string | null;
    /**
     * LinkedIn profile URL
     */
    linkedin?: string | null;
    /**
     * GitHub profile URL
     */
    github?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  /**
   * Alternative text for accessibility and SEO
   */
  alt?: string | null;
  /**
   * Optional caption for the image
   */
  caption?: string | null;
  /**
   * Tags for organizing images
   */
  tags?: string[] | null;
  /**
   * Photographer or image source credit
   */
  photographer?: string | null;
  cloudinaryPublicId?: string | null;
  cloudinaryUrl?: string | null;
  cloudinaryResourceType?: string | null;
  cloudinaryFormat?: string | null;
  cloudinaryVersion?: number | null;
  /**
   * Direct URL to the original file without transformations
   */
  originalUrl?: string | null;
  /**
   * URL with applied transformations
   */
  transformedUrl?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  /**
   * File size in bytes
   */
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      cloudinaryPublicId?: string | null;
      cloudinaryUrl?: string | null;
      cloudinaryResourceType?: string | null;
      cloudinaryFormat?: string | null;
      cloudinaryVersion?: number | null;
      /**
       * Direct URL to the original file without transformations
       */
      originalUrl?: string | null;
      /**
       * URL with applied transformations
       */
      transformedUrl?: string | null;
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      /**
       * File size in bytes
       */
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      cloudinaryPublicId?: string | null;
      cloudinaryUrl?: string | null;
      cloudinaryResourceType?: string | null;
      cloudinaryFormat?: string | null;
      cloudinaryVersion?: number | null;
      /**
       * Direct URL to the original file without transformations
       */
      originalUrl?: string | null;
      /**
       * URL with applied transformations
       */
      transformedUrl?: string | null;
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      /**
       * File size in bytes
       */
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      cloudinaryPublicId?: string | null;
      cloudinaryUrl?: string | null;
      cloudinaryResourceType?: string | null;
      cloudinaryFormat?: string | null;
      cloudinaryVersion?: number | null;
      /**
       * Direct URL to the original file without transformations
       */
      originalUrl?: string | null;
      /**
       * URL with applied transformations
       */
      transformedUrl?: string | null;
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      /**
       * File size in bytes
       */
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  /**
   * The main title of your blog post
   */
  title: string;
  /**
   * URL-friendly version of the title (e.g., "my-awesome-post")
   */
  slug: string;
  /**
   * A brief summary of the post (used in previews and SEO)
   */
  excerpt?: string | null;
  /**
   * The main content of your blog post with enhanced rich text features including markdown-like formatting, lists, blockquotes, and images
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Featured image for the post (used in previews and headers)
   */
  featuredImage?: (string | null) | Media;
  /**
   * Author of the post
   */
  author: string | User;
  /**
   * Primary category for the post
   */
  category?: (string | null) | Category;
  /**
   * Tags for categorizing and searching posts
   */
  tags?: (string | Tag)[] | null;
  /**
   * Publication status of the post
   */
  status: 'draft' | 'published' | 'archived';
  /**
   * Date when the post was/will be published
   */
  publishedAt?: string | null;
  meta?: {
    /**
     * Custom SEO title (defaults to post title)
     */
    title?: string | null;
    /**
     * Custom SEO description (defaults to excerpt)
     */
    description?: string | null;
    /**
     * SEO keywords (comma-separated)
     */
    keywords?: string | null;
    /**
     * Custom Open Graph image (defaults to featured image)
     */
    ogImage?: (string | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  /**
   * The name of the category (e.g., "Technology", "Travel")
   */
  name: string;
  /**
   * URL-friendly version of the category name
   */
  slug: string;
  /**
   * A brief description of what this category is about
   */
  description?: string | null;
  /**
   * Hex color code for category styling (e.g., #FF5733)
   */
  color?: string | null;
  /**
   * Icon name or emoji for the category
   */
  icon?: string | null;
  /**
   * SEO settings for this category
   */
  seo?: {
    /**
     * SEO title for category pages
     */
    metaTitle?: string | null;
    /**
     * SEO description for category pages
     */
    metaDescription?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: string;
  /**
   * The name of the tag (e.g., "JavaScript", "React", "Tutorial")
   */
  name: string;
  /**
   * URL-friendly version of the tag name
   */
  slug: string;
  /**
   * A brief description of what this tag represents
   */
  description?: string | null;
  /**
   * Hex color code for tag styling (e.g., #4CAF50)
   */
  color?: string | null;
  /**
   * SEO settings for this tag
   */
  seo?: {
    /**
     * SEO title for tag pages
     */
    metaTitle?: string | null;
    /**
     * SEO description for tag pages
     */
    metaDescription?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'tags';
        value: string | Tag;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  bio?: T;
  avatar?: T;
  social?:
    | T
    | {
        website?: T;
        twitter?: T;
        linkedin?: T;
        github?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  tags?: T;
  photographer?: T;
  cloudinaryPublicId?: T;
  cloudinaryUrl?: T;
  cloudinaryResourceType?: T;
  cloudinaryFormat?: T;
  cloudinaryVersion?: T;
  originalUrl?: T;
  transformedUrl?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              cloudinaryPublicId?: T;
              cloudinaryUrl?: T;
              cloudinaryResourceType?: T;
              cloudinaryFormat?: T;
              cloudinaryVersion?: T;
              originalUrl?: T;
              transformedUrl?: T;
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              cloudinaryPublicId?: T;
              cloudinaryUrl?: T;
              cloudinaryResourceType?: T;
              cloudinaryFormat?: T;
              cloudinaryVersion?: T;
              originalUrl?: T;
              transformedUrl?: T;
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              cloudinaryPublicId?: T;
              cloudinaryUrl?: T;
              cloudinaryResourceType?: T;
              cloudinaryFormat?: T;
              cloudinaryVersion?: T;
              originalUrl?: T;
              transformedUrl?: T;
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  excerpt?: T;
  content?: T;
  featuredImage?: T;
  author?: T;
  category?: T;
  tags?: T;
  status?: T;
  publishedAt?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
        ogImage?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  color?: T;
  icon?: T;
  seo?:
    | T
    | {
        metaTitle?: T;
        metaDescription?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags_select".
 */
export interface TagsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  color?: T;
  seo?:
    | T
    | {
        metaTitle?: T;
        metaDescription?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}